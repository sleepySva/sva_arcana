{
  "name": "arcana_boss_terminusReaper_glide",
  "description": "",
  "scripts": [
    "/scripts/actions/time.lua",
    "/scripts/actions/movement.lua",
    "/scripts/actions/animator.lua",
    "/scripts/actions/flying.lua",
    "/scripts/actions/position.lua",
    "/scripts/actions/math.lua",
    "/scripts/actions/projectiles.lua"
  ],
  "parameters": {
    "chargeState": "jump",
    "idleState": "idle",
	"chargeSpeed": 10,
	"chargeControlForce": 70,
    "windupTime": 0.1,
    "stopTime": 0.3
  },
  "root": {
    "title": "Reset",
    "type": "composite",
    "name": "sequence",
    "parameters": {},
    "children": [
      {
        "title": "timer",
        "type": "action",
        "name": "timer",
        "parameters": {
          "time": {"value": "<windupTime>"}
        }
      },
      {
        "title": "entityPosition",
        "type": "action",
        "name": "entityPosition",
        "parameters": {
          "entity": {"key": "target"}
        },
        "output": {
          "position": "targetPosition"
        }
      },
      {
        "title": "distance",
        "type": "action",
        "name": "distance",
        "parameters": {
          "from": {"key": "self"},
          "to": {"key": "targetPosition"}
        },
        "output": {
          "x": "toTarget"
        }
      },
      {
        "title": "distance",
        "type": "action",
        "name": "distance",
        "parameters": {
          "from": {"key": "self"},
          "to": {"key": "targetPosition"}
        },
        "output": {
          "vector": "aimVector"
        }
      },
	  {
		"title": "vecAngle",
		"type": "action",
		"name": "vecAngle",
		"parameters": {
		  "vector": {"key": "aimVector"}
		},
		"output": {
		  "angle": "aimAngle"
		}
	  },
      {
        "title": "setDirection",
        "type": "action",
        "name": "setDirection",
        "parameters": {
          "direction": {"key": "toTarget"}
        },
        "output": {
          "direction": "toTarget"
        }
      },
      {
        "title": "parallel",
        "type": "composite",
        "name": "parallel",
        "parameters": {
          "fail": {"value": 1},
          "success": {"value": -1}
        },
        "children": [
          {
            "title": "controlParameters",
            "type": "action",
            "name": "controlParameters",
            "parameters": {
              "parameters": {"value": {"gravityEnabled": false}}
            }
          },
		  {
			"title": "entityPosition",
			"type": "action",
			"name": "entityPosition",
			"parameters": {
			  "entity": {"key": "target"}
			},
			"output": {
			  "position": "targetPosition"
			}
		  },
		  {
			"title": "distance",
			"type": "action",
			"name": "distance",
			"parameters": {
			  "from": {"key": "self"},
			  "to": {"key": "targetPosition"}
			},
			"output": {
			  "x": "toTarget"
			}
		  },
		  {
			"title": "distance",
			"type": "action",
			"name": "distance",
			"parameters": {
			  "from": {"key": "self"},
			  "to": {"key": "targetPosition"}
			},
			"output": {
			  "vector": "aimVector"
			}
		  },
		  {
			"title": "vecAngle",
			"type": "action",
			"name": "vecAngle",
			"parameters": {
			  "vector": {"key": "aimVector"}
			},
			"output": {
			  "angle": "aimAngle"
			}
		  },
		  {
			"title": "setDirection",
			"type": "action",
			"name": "setDirection",
			"parameters": {
			  "direction": {"key": "toTarget"}
			},
			"output": {
			  "direction": "toTarget"
			}
		  },
		  {
			"title": "controlApproachVelocityAlongAngle",
			"type": "action",
			"name": "controlApproachVelocityAlongAngle",
			"parameters": {
			  "angle": {"key": "aimAngle"},
			  "force": {"key": "<chargeControlForce>"},
			  "velocity": {"key": "<chargeSpeed>"}
			}
		  },
          {
            "title": "sequence",
            "type": "composite",
            "name": "sequence",
            "parameters": {},
            "children": [
              {
                "title": "timer",
                "type": "action",
                "name": "timer",
                "parameters": {
                  "time": {"value": "<stopTime>"}
                }
              }
            ]
          }
        ]
      }
    ]
  }
}
